// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  first_name    String
  email         String          @unique
  verified      Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  Publisher     Publisher?
  Subscriptions Subscriptions[]
  Otps          OTP[]
}

model OTP {
  id        String   @id @default(uuid())
  token     String
  User      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String
  createdAt DateTime @default(now())
}

model Publisher {
  id         String        @id @default(uuid())
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  User       User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String        @unique
  workspaces Workspaces[]
  invites    InviteLinks[]
}

model Workspaces {
  id           String          @id @default(uuid())
  name         String
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  Publisher    Publisher       @relation(fields: [publisher_id], references: [id], onDelete: Cascade)
  publisher_id String
  max_invites  Int             @default(10)
  invite_links InviteLinks[]
  subscribers  Subscriptions[]
  post         Post[]
}

model Subscriptions {
  id            String     @id @default(uuid())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  User          User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       String
  Workspaces    Workspaces @relation(fields: [workspaces_id], references: [id], onDelete: Cascade)
  workspaces_id String
}

model Post {
  id            String     @id @default(uuid())
  title         String
  audio         String
  image         String
  Workspaces    Workspaces @relation(fields: [workspaces_id], references: [id], onDelete: Cascade)
  workspaces_id String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model InviteLinks {
  id                String     @id @default(uuid())
  unique_link       String     @unique
  Publisher         Publisher  @relation(fields: [publisher_id], references: [id])
  publisher_id      String
  Workspaces        Workspaces @relation(fields: [workspaces_id], references: [id])
  workspaces_id     String
  createdAt         DateTime   @default(now())
}
